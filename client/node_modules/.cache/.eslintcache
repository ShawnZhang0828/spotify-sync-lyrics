[{"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\index.js":"1","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\App.js":"2","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\reportWebVitals.js":"3","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Lyrics.js":"4","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Header.js":"5","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\LoginButton.js":"6","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\ToolBar.js":"7","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\ToolButton.js":"8","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Setting.js":"9"},{"size":535,"mtime":1681500681125,"results":"10","hashOfConfig":"11"},{"size":8340,"mtime":1698194598406,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1681500681292,"results":"13","hashOfConfig":"11"},{"size":9304,"mtime":1683411458199,"results":"14","hashOfConfig":"11"},{"size":1598,"mtime":1682191776613,"results":"15","hashOfConfig":"11"},{"size":188,"mtime":1681683507134,"results":"16","hashOfConfig":"11"},{"size":4041,"mtime":1682061328415,"results":"17","hashOfConfig":"11"},{"size":289,"mtime":1681773848815,"results":"18","hashOfConfig":"11"},{"size":2178,"mtime":1691636016823,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"ot4rff",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\index.js",[],[],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\App.js",["50","51","52","53"],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\reportWebVitals.js",[],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Lyrics.js",["54","55","56","57","58"],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Header.js",["59"],[],"import {useEffect, useState} from 'react'\r\nimport LoginButton from \"./LoginButton\"\r\nimport '../styles/login.css'\r\n\r\n// const CLIENT_ID = \"07f45b95ceac490ba0871336604107e0\"\r\n// const CLIENT_SECRET = \"2896dd203a234606ab0e2ba2a2aa5ad8\"\r\n// const SCOPE = \"user-read-currently-playing\"\r\nconst LOGIN_URI = \"http://localhost:8080/auth/login\"\r\n// const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\r\n// const RESPONSE_TYPE = \"code\"\r\n\r\nconst Header = ({ props }) => {\r\n\r\n  const logout = async () => {\r\n    setCode(\"\")\r\n    window.localStorage.removeItem(\"code\")\r\n    window.localStorage.removeItem(\"access-token\")\r\n    window.localStorage.removeItem(\"refresh_token\")\r\n  }\r\n  \r\n  const [code, setCode] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const search = window.location.search\r\n    let code = window.localStorage.getItem(\"code\")\r\n\r\n    if (!code && search) {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      console.log(urlParams);\r\n\r\n      window.localStorage.setItem(\"code\", urlParams.get('code'))\r\n      window.localStorage.setItem(\"access-token\", urlParams.get('access_token'))\r\n      window.localStorage.setItem(\"refresh-token\", urlParams.get('refresh_token'))\r\n      \r\n    }\r\n\r\n    setCode(code)\r\n  }, []);\r\n\r\n  return (\r\n    // <h1>Spotify React {code ? <LoginButton onClick={logout} text=\"logout\"/> : <LoginButton onClick={login} text=\"login\"/>} </h1>\r\n    <h1>Spotify React {window.localStorage.getItem('access-token') ? <LoginButton onClick={logout} text=\"logout\"/> : <LoginButton text=\"login\" href={LOGIN_URI}/>} </h1>\r\n  )\r\n}\r\n\r\nexport default Header","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\LoginButton.js",[],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\ToolBar.js",["60"],[],"import Setting from \"./Setting\";\r\nimport ToolButton from \"./ToolButton\"\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../styles/toolbar.css\"\r\nimport { faPlay, faPause, faForward, faBackward, faGear, faLock, faUnlock, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction ToolBar() {\r\n\r\n    const handleMouseOver = () => {\r\n        if (!locked) {\r\n            setShowToolbar(true);\r\n        }\r\n      };\r\n    \r\n    const handleMouseOut = () => {\r\n        if (!locked) {\r\n            setShowToolbar(false);\r\n        }\r\n    };\r\n\r\n    const handlePlayClick = async () => {\r\n        try {\r\n            await axios.put(\"https://api.spotify.com/v1/me/player/play\", null, {\r\n                headers: {\r\n                  Authorization: `Bearer ${window.localStorage.getItem(\"access-token\")}`\r\n                },\r\n              })\r\n            window.localStorage.setItem(\"is-playing\", \"true\")\r\n            setPlaying(true)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handlePauseClick = async () => {\r\n        try {\r\n            await axios.put(\"https://api.spotify.com/v1/me/player/pause\", null, {\r\n                headers: {\r\n                  Authorization: `Bearer ${window.localStorage.getItem(\"access-token\")}`\r\n                },\r\n              })\r\n            \r\n            window.localStorage.setItem(\"is-playing\", \"false\")\r\n            setPlaying(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handlePreviousClick = async () => {\r\n        try {\r\n            await axios.post(\"https://api.spotify.com/v1/me/player/previous\", null, {\r\n                headers: {\r\n                  Authorization: `Bearer ${window.localStorage.getItem(\"access-token\")}`\r\n                },\r\n              })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleNextClick = async () => {\r\n        try {\r\n            await axios.post(\"https://api.spotify.com/v1/me/player/next\", null, {\r\n                headers: {\r\n                  Authorization: `Bearer ${window.localStorage.getItem(\"access-token\")}`\r\n                },\r\n              })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleLockClick = () => {\r\n        setLocked(true)\r\n    }\r\n\r\n    const handleUnlockClick = () => {\r\n        setLocked(false)\r\n    }\r\n\r\n    const handleSettingClick = () => {\r\n        setShowSetting(showSetting ? !showSetting : true)\r\n    }\r\n\r\n    const handleExitClick = () => {\r\n        // TODO: add more authentication-related logic\r\n        window.localStorage.clear()\r\n        window.localStorage.setItem('refresh-token', '1')\r\n    }\r\n\r\n    const [showToolbar, setShowToolbar] = useState(false);\r\n    const [locked, setLocked] = useState(false);\r\n    const [playing, setPlaying] = useState(true);\r\n    const [showSetting, setShowSetting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setPlaying(window.localStorage.getItem(\"is-playing\") === 'true')\r\n    }, [window.localStorage.getItem(\"is-playing\")]);\r\n\r\n    return (\r\n        <div className=\"toolbar-wrapper\" onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <div className=\"toolbar\" style={{display: showToolbar ? \"flex\" : \"none\"}}>\r\n                <ToolButton icon={faBackward} onClick={handlePreviousClick}/>\r\n                {!playing ? <ToolButton icon={faPlay} onClick={handlePlayClick}/> : <ToolButton icon={faPause} onClick={handlePauseClick}/>}\r\n                <ToolButton icon={faForward} onClick={handleNextClick}/>\r\n                <ToolButton icon={faGear} onClick={handleSettingClick}/>\r\n                {!locked ? <ToolButton icon={faLock} onClick={handleLockClick}/> : <ToolButton icon={faUnlock} onClick={handleUnlockClick}/>}\r\n                <ToolButton icon={faRightFromBracket} onClick={handleExitClick}/>\r\n            </div>\r\n            {showSetting && <Setting />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar","C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\ToolButton.js",[],[],"C:\\Study\\VS Code\\spotify-lyrics-sync\\client\\src\\components\\Setting.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":198,"column":6,"nodeType":"67","endLine":198,"endColumn":13,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":235,"column":6,"nodeType":"67","endLine":235,"endColumn":43,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"71","line":241,"column":7,"nodeType":"72","endLine":241,"endColumn":51},{"ruleId":"61","severity":1,"message":"73","line":22,"column":12,"nodeType":"63","messageId":"64","endLine":22,"endColumn":27},{"ruleId":"65","severity":1,"message":"71","line":57,"column":9,"nodeType":"72","endLine":57,"endColumn":48},{"ruleId":"65","severity":1,"message":"74","line":136,"column":8,"nodeType":"67","endLine":136,"endColumn":49,"suggestions":"75"},{"ruleId":"65","severity":1,"message":"71","line":165,"column":9,"nodeType":"72","endLine":165,"endColumn":49},{"ruleId":"76","severity":1,"message":"77","line":175,"column":17,"nodeType":"78","endLine":175,"endColumn":50},{"ruleId":"61","severity":1,"message":"79","line":21,"column":10,"nodeType":"63","messageId":"64","endLine":21,"endColumn":14},{"ruleId":"65","severity":1,"message":"71","line":101,"column":9,"nodeType":"72","endLine":101,"endColumn":50},"no-unused-vars","'parse' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTrackChange'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'currentLineIndex', 'getCurrentTrack', and 'track'. Either include them or remove the dependency array.",["81"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'currentHiragana' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hiragana'. Either include it or remove the dependency array.",["82"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'code' is assigned a value but never used.",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [handleTrackChange, track]",{"range":"89","text":"90"},"Update the dependencies array to be: [currentLineIndex, currentTime, getCurrentTrack, lyrics, track, trackStartTime]",{"range":"91","text":"92"},"Update the dependencies array to be: [currentLineIndex, convertedLines, lines, hiragana]",{"range":"93","text":"94"},[6551,6558],"[handleTrackChange, track]",[7824,7861],"[currentLineIndex, currentTime, getCurrentTrack, lyrics, track, trackStartTime]",[5801,5842],"[currentLineIndex, convertedLines, lines, hiragana]"]
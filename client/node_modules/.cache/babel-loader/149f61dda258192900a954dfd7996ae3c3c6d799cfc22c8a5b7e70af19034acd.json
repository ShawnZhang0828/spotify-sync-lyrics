{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\VS Code\\\\spotify-lyrics-sync\\\\client\\\\src\\\\components\\\\Lyrics.js\";\nimport \"../styles/lyrics.css\";\nimport ToolBar from \"./ToolBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lyrics(_ref) {\n  let {\n    lines,\n    currentLineIndex,\n    bg_img\n  } = _ref;\n  var startIndex = Math.max(currentLineIndex - 2, 0);\n  startIndex = Math.min(startIndex, lines.length - 6);\n  var endIndex = startIndex + 2;\n  var displayedLines = lines.slice(startIndex, endIndex + 1);\n  if (displayedLines.length === 0) {\n    currentLineIndex = 2;\n    const myArray = Array.from({\n      length: 5\n    }, () => ({\n      startTimeMs: 0,\n      words: \"  \"\n    }));\n    displayedLines = myArray;\n    displayedLines[2].words = \"Lyrics Not Found.\";\n    startIndex = 0; // display lyrics not found as bold font\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lyrics-container\",\n    style: {\n      backgroundImage: `url(${bg_img})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), displayedLines.map((line, index) => {\n      const lineIndex = startIndex + index;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `lyrics-line ${currentLineIndex === lineIndex ? \"current-line\" : \"\"}`,\n        children: line.words\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = Lyrics;\nexport default Lyrics;\nvar _c;\n$RefreshReg$(_c, \"Lyrics\");","map":{"version":3,"names":["ToolBar","jsxDEV","_jsxDEV","Lyrics","_ref","lines","currentLineIndex","bg_img","startIndex","Math","max","min","length","endIndex","displayedLines","slice","myArray","Array","from","startTimeMs","words","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","lineIndex","_c","$RefreshReg$"],"sources":["C:/Study/VS Code/spotify-lyrics-sync/client/src/components/Lyrics.js"],"sourcesContent":["import \"../styles/lyrics.css\"\r\nimport ToolBar from \"./ToolBar\";\r\n\r\n\r\nfunction Lyrics({ lines, currentLineIndex, bg_img }) {\r\n    var startIndex = Math.max(currentLineIndex - 2, 0);\r\n    startIndex = Math.min(startIndex, lines.length - 6)\r\n    var endIndex = startIndex + 2;\r\n\r\n    var displayedLines = lines.slice(startIndex, endIndex + 1);\r\n    if (displayedLines.length === 0) {\r\n        currentLineIndex = 2;\r\n        const myArray = Array.from({ length: 5 }, () => ({ startTimeMs: 0, words: \"  \" }));\r\n        displayedLines = myArray;\r\n        displayedLines[2].words = \"Lyrics Not Found.\";\r\n        startIndex = 0;     // display lyrics not found as bold font\r\n    }\r\n\r\n    return (\r\n        <div className=\"lyrics-container\" style={{ backgroundImage: `url(${bg_img})` }}>\r\n            <ToolBar />\r\n            {displayedLines.map((line, index) => {\r\n                const lineIndex = startIndex + index;\r\n                return <div key={index} className={`lyrics-line ${currentLineIndex === lineIndex ? \"current-line\" : \"\"}`}>{line.words}</div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lyrics"],"mappings":";AAAA,OAAO,sBAAsB;AAC7B,OAAOA,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,MAAMA,CAAAC,IAAA,EAAsC;EAAA,IAArC;IAAEC,KAAK;IAAEC,gBAAgB;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC/C,IAAII,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACJ,gBAAgB,GAAG,CAAC,EAAE,CAAC,CAAC;EAClDE,UAAU,GAAGC,IAAI,CAACE,GAAG,CAACH,UAAU,EAAEH,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC;EACnD,IAAIC,QAAQ,GAAGL,UAAU,GAAG,CAAC;EAE7B,IAAIM,cAAc,GAAGT,KAAK,CAACU,KAAK,CAACP,UAAU,EAAEK,QAAQ,GAAG,CAAC,CAAC;EAC1D,IAAIC,cAAc,CAACF,MAAM,KAAK,CAAC,EAAE;IAC7BN,gBAAgB,GAAG,CAAC;IACpB,MAAMU,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEN,MAAM,EAAE;IAAE,CAAC,EAAE,OAAO;MAAEO,WAAW,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;IAClFN,cAAc,GAAGE,OAAO;IACxBF,cAAc,CAAC,CAAC,CAAC,CAACM,KAAK,GAAG,mBAAmB;IAC7CZ,UAAU,GAAG,CAAC,CAAC,CAAK;EACxB;;EAEA,oBACIN,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAG,OAAMhB,MAAO;IAAG,CAAE;IAAAiB,QAAA,gBAC3EtB,OAAA,CAACF,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACVd,cAAc,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACjC,MAAMC,SAAS,GAAGxB,UAAU,GAAGuB,KAAK;MACpC,oBAAO7B,OAAA;QAAiBmB,SAAS,EAAG,eAAcf,gBAAgB,KAAK0B,SAAS,GAAG,cAAc,GAAG,EAAG,EAAE;QAAAR,QAAA,EAAEM,IAAI,CAACV;MAAK,GAApGW,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAsG;IAChI,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAACK,EAAA,GAvBQ9B,MAAM;AAyBf,eAAeA,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}